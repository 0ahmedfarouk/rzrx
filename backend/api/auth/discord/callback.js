import { createClient } from '@supabase/supabase-js';import * as jose from 'jose';const s=createClient(process.env.SUPABASE_URL,process.env.SUPABASE_SERVICE_ROLE);export default async function h(req,res){try{const {code,state}=req.query||{};if(!code||!state)return res.status(400).send('Missing code/state');const cs=(req.headers.cookie||'').split('; ').find(v=>v.startsWith('oauth_state='))||'';const cst=cs.split('=')[1];if(!cst||cst!==state)return res.status(400).send('Invalid state');const tr=await fetch('https://discord.com/api/oauth2/token',{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:new URLSearchParams({client_id:process.env.DISCORD_CLIENT_ID,client_secret:process.env.DISCORD_CLIENT_SECRET,grant_type:'authorization_code',code,redirect_uri:process.env.DISCORD_REDIRECT_URI}).toString()});if(!tr.ok)return res.status(400).send('Token exchange failed');const {access_token}=await tr.json();const ur=await fetch('https://discord.com/api/users/@me',{headers:{Authorization:`Bearer ${access_token}`}});if(!ur.ok)return res.status(400).send('User fetch failed');const u=await ur.json();const id=String(u.id);const username=u.global_name||u.username||'User';await s.from('users').upsert({id,username,credits:0},{onConflict:'id'});const token=await new jose.SignJWT({user_id:id,username}).setProtectedHeader({alg:'HS256'}).setIssuedAt().setExpirationTime('7d').sign(new TextEncoder().encode(process.env.JWT_SECRET));const red=`${process.env.FRONTEND_URL||'https://rzrx.site'}/#token=${token}`;res.writeHead(302,{Location:red});res.end()}catch(e){res.status(500).send('OAuth error')}}